Ext.define 'QuotationCreate',
  extend: 'Ext.form.Panel'
  border: false
  layout: type: 'vbox', align: 'stretch'
  load_grid_file_items: (uuid, name)->
    me = @
    me.rest_client.show uuid, name, {},
      (res)->
        if res.success
          grid = me.file_upload_panel.down "grid[name=#{name}]"
          grid.getStore().removeAll()
          grid.getStore().add res.rows
    ,
      ()->
  load_grid_items: (uuid)->
    me = @
    me.grid.setLoading true
    me.rest_client.index 'item_data', { uuid: uuid },
      (res)->
        me.grid.getStore().removeAll()
        me.grid.getStore().add res.rows
        me.grid.setLoading false
    ,
      ()->
        me.grid.setLoading false

  get_upload_grid: (name, title, init)->
    me = @

    xtype: 'grid'
    listeners:
      render: ()->
        if init.uuid
          me.load_grid_file_items init.uuid, name

    store: Ext.create 'Ext.data.Store',
      fields: [
        type: 'string', name: 'record_id'
        type: 'string', name: 'filename'
        type: 'string', name: 'uploaded'
      ]
    columns: [
      xtype:'actioncolumn'
      width: 60
      items: [
        icon: ProgHelper.img_url "document-download1.gif"
        tooltip: 'Download'
        handler: (grid, rowIndex, colIndex)->
          rec = grid.getStore().getAt rowIndex
          
      ,
        icon: ProgHelper.img_url "space.png"
      ,
        icon: ProgHelper.img_url "file_delete_16.png"
        tooltip: 'Delete'
        handler: (grid, rowIndex, colIndex)->
          rec = grid.getStore().getAt rowIndex

          Ext.Msg.show
            title:'Delete File?'
            message: rec.get 'filename'
            buttons: Ext.Msg.YESNO
            icon: Ext.Msg.QUESTION
            fn: (btn)->
              if btn == 'yes'
                me.rest_client.destroy rec.get('record_id'), name, {},
                  (res)->
                    if res.success
                      me.load_grid_items init.uuid
                       
      ]
    ,
      text: 'Filename'
      dataIndex: 'filename'
      flex: 1
    ,
      text: 'Uploaded'
      dataIndex: 'uploaded'
      width: 150

    ]
    name: name#'approve_file'
    title: title#'Upload Approve File'
    flex: 1
    dockedItems: [
      xtype: 'toolbar'
      dock: 'top'
      items: [ 
        xtype: 'upload5'
        extra_params: uuid: init.uuid
        text: text_fa_icon 'upload', ''
        callback: (err, data)->
          return if err 
          me.rest_client.update data.hash, "store_#{name}", {},
            (res)->
              if res.success
                me.rest_client.show init.uuid, name, {},
                  (res)->
                    if res.success
                      grid = me.file_upload_panel.down "grid[name=#{name}]"
                      grid.getStore().removeAll()
                      grid.getStore().add res.rows
                ,
                  ()->
          ,
            ()->
          ,
            jsonData:
              uuid: init.uuid
              filename: data.filename
      ]
    ]

  initComponent: ->
    me = @

    init = Ext.valueFrom me.initialConfig.init, {}
    console.log init
    form = FormHelper.layout
      row: 2
      col: 6
      items: [
        xtype: 'hidden'
        value: init.uuid
        name: 'uuid'
      ,
        xtype: 'hidden'
        name: 'id'
        value: init.id
      ,
        xtype: 'hidden'
        name: 'lock_version'
        value: init.lock_version
      ,
        type: 'text'
        captions: ['Quotation No.']
        pos: [1, 1]
        name: 'quotation_no'
        is_require: if init.id then false else true
        value: init.quotation_no
        readOnly: if init.id then true else false
      ,
        xtype: 'combo'
        pos: [1, 2]
        fieldLabel: 'Customer'
        name: 'customer'
        value: init.ref_customer_uuid
        forceSelection: true
        labelAlign: 'top'
        store: Ext.create 'Ext.data.Store',
          fields: ['uuid', 'cust_name']
          data: init.customers
        queryMode: 'local'
        displayField: 'display_name'
        valueField: 'uuid'
      ,
        type: 'text'
        value: init.created_by
        captions: ['Create Person']
        pos: [1, 6]
        readOnly: true
        value: "#{USER_FIRST_NAME} #{USER_LAST_NAME}"
      ,
        type: 'date'
        value: init.issue_date
        captions: ['Issue Date']
        pos: [1, 4]
        name: 'issue_date'
      ,
        xtype: 'combo'
        value: init.ref_freight_term_uuid
        pos: [1, 5]
        name: 'freight_term'
        fieldLabel: 'Freight Term'
        forceSelection: true
        labelAlign: 'top'
        store: Ext.create 'Ext.data.Store',
          fields: ['uuid', 'freight_term']
          data: init.freight_terms
        queryMode: 'local'
        displayField: 'display_name'
        valueField: 'uuid'
      ,
        type: 'number'
        value: init.exchange_rate
        format: '0,000.00'
        name: 'exchange_rate'
        captions: ['Exchange Rate']
        pos: [1, 3]
      ]

    @file_upload_panel = Ext.create 'Ext.panel.Panel',
      height: 200
      margin: '0 10 10 10'
      layout: type: 'hbox', align: 'stretch'
      border: false
      items: [
        @get_upload_grid 'approve_file', 'Approve File', init
      ,
        @get_upload_grid 'calculation_file', 'Calculation File', init
      ]
      

    @grid = Ext.create 'Ext.grid.Panel',
      flex: 1
      listeners:
        render: ()->
          if init.uuid
            me.load_grid_items init.uuid

      margin: '0 10 10 10'
      title: 'Import Data'
      #plugins:
      #  ptype: 'cellediting'
      #  clicksToEdit: 1
      store: Ext.create 'Ext.data.Store',
        fields: [
          type: 'string', name: 'item_code'
          type: 'string', name: 'model'
          type: 'string', name: 'sub_code'
          type: 'string', name: 'part_name'
          type: 'string', name: 'customer_code'
          type: 'string', name: 'unit_price'
          type: 'float', name: 'package_price'
          type: 'integer', name: 'row_no'
        ]
      

      dockedItems: [
        xtype: 'toolbar'
        dock: 'top'
        items: [
          xtype: 'upload5'
          extra_params:
            quotation_uuid: init.uuid
          text: text_fa_icon 'upload', ''
          callback: (err, data)->
            return if err
            
            me.grid.setLoading true
            me.rest_client.update data.hash, "process_file", {},
              (response)->
                me.grid.setLoading false
                if response.success
                  unless response.valid
                    Ext.create('Ext.window.Window',
                      layout: 'fit'
                      width: 600
                      height: 400
                      modal: true
                      items: 
                        xtype: 'htmleditor'
                        name: 'html_logger' 
                        submitValue: false
                        border: false
                        value: response.html
                        listeners:
                          render: ()->
                            @getToolbar().hide()
                            @setReadOnly true
                    ).show()
                  else
                    me.grid.setLoading true
                    me.rest_client.index 'item_data', { uuid: init.uuid },
                      (res)->
                        me.grid.getStore().removeAll()
                        me.grid.getStore().add res.rows
                        me.grid.setLoading false
                    ,
                      ()->
                        me.grid.setLoading false

            ,
              ()->
                me.grid.setLoading false
            ,
              jsonData:
                quotation_uuid: init.uuid
        ]
      ]
      columns: [
        ###
        xtype:'actioncolumn'
        width: 30
        align: 'center'
        items: [
          icon: ProgHelper.img_url "file_delete.png"
          tooltip: 'Delete'
          handler: (grid, rowIndex, colIndex)->
            rec = grid.getStore().getAt rowIndex
            grid.getStore().remove rec
        ]
        ,
        ###
        xtype: 'rownumberer'
        width: 45
      ,
        text: text_fa_icon 'file-excel-o', 'Line'
        width: 55
        dataIndex: 'row_no'
        align: 'right'
      ,
        text: 'Item Code'
        dataIndex: 'item_code'
        width: 100
      ,
        text: 'Model'
        dataIndex: 'model'
        width: 90
      ,
        text: 'Sub Code'
        width: 90
        dataIndex: 'sub_code'
      ,
        text: 'Customer Code'
        width: 120
        dataIndex: 'customer_code'
      ,
        text: 'Part Name'
        dataIndex: 'part_name'
        width: 100
      ,
        text: 'Part Price'
        dataIndex: 'part_price'
        align: 'right'
        width: 120
        renderer: Ext.util.Format.numberRenderer('0,000.00')
      ,
        text: 'Package Price'
        dataIndex: 'package_price'
        align: 'right'
        width: 120
      ,
        text: 'Total Price'
        dataIndex: 'total_price'
        align: 'right'
        width: 120
      ,
        text: 'Unit Price'
        dataIndex: 'unit_price'
        align: 'center'
        width: 80
      ,
        text: 'PO Reference'
        width: 120
        dataIndex: 'po_reference'
      ,
        text: 'Remark'
        dataIndex: 'remark'
        width: 200
      ]
 

    @items = [ 
      form 
    ,
      @grid
    ,
      @file_upload_panel
      
    ]
    @callParent arguments