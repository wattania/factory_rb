//= require programs/cust_prop_search
//= require programs/cust_prop_create
//= require filter_panel

Ext.define 'CustPropView',
  extend: 'Ext.panel.Panel'
  border: false
  layout: 'card'
  listeners:
    render: (me)->
      btn_serch = me.down 'button[name=search]'
      btn_create = me.down 'button[name=create]'

      btn_create.on 'click', ()->
        me.setLoading true
        me.rest_client.create 'form', {},
          (res)->
            me.setLoading false
            if res.success
              form = Ext.create 'CustPropCreate',
                flex: 1
                init: Ext.valueFrom(res.data, {})

              panel = Ext.create 'Ext.panel.Panel',
                listeners:
                  render: ()->
                    btn_back = panel.down 'button[name=back]'

                    btn_back.on 'click', ()->
                      me.setActiveItem 0
                      me.remove me.items.getAt 1

                dockedItems: [
                  xtype: 'toolbar'
                  dock: 'top'
                  items: [
                    xtype: 'button'
                    text: text_fa_icon 'save', 'Save'
                    handler: (btn)->
                      return unless form.isValid()
                      values = form.getValues()
                      me.setLoading true
                      if Ext.isEmpty values.id
                        me.rest_client.create 'data', {},
                          (res)->
                            me.setLoading false
                            if res.success
                              me.setActiveItem 0
                              me.remove me.items.getAt 1
                              me.grid.loadPage 1
                        ,
                          ()->
                            me.setLoading false
                        ,
                          jsonData:
                            data: values
                      else
                        me.rest_client.update values.id, 'data', {},
                          (res)->
                            me.setLoading false
                            if res.success
                              me.setActiveItem 0
                              me.remove me.items.getAt 1
                              me.grid.loadPage 1
                        ,
                          ()->
                            me.setLoading false
                        ,
                          jsonData:
                            data: values

                  ,
                    xtype: 'button'
                    text: text_fa_icon 'arrow-left', 'Back'
                    name: 'back'
                  ]
                ]
                layout: type: 'vbox', align: 'stretch'
                autoScroll: true
                items: form 

              me.add panel
              me.getLayout().setActiveItem panel

        ,
          ()->
            me.setLoading false

  initComponent: ->

    @filter_panel = Ext.create 'FilterPanel',
      region: 'east'
      listeners:
        search: (c, values)->
          me.grid.getStore().loadPage 1, 
            callback: ()-> 
              me.grid.check_btns()

        clear: (c)->
          me.grid.getStore().loadPage 1, 
            callback: ()-> 
              me.grid.check_btns()
           
      cmps: [
        text: 'Document No.'
        cmp: xtype: 'checkbox', name: 'document_no'
      , 
        text: 'Description'
        cmp: xtype: 'x_text', name: 'discription'  
      ,
        text: 'Request By'
        cmp: xtype: 'x_text', name: 'request_by'
      ,
        text: 'Department'
        cmp: xtype: 'x_text', name: 'department'
      ,
        text: 'Unit'
        cmp: xtype: 'x_text', name: 'unit'
      ,
        text: 'CMD Issue Date'
        cmp: xtype: 'x_date_range', name: 'cmd_issue_date'
      ,
        text: 'Require Date'
        cmp: xtype: 'x_date_range', name: 'require_date'
      ,
        text: 'Status'
        cmp: xtype: 'x_text', name: 'status'
      ,
        text: 'Tool Receive Date'
        cmp: xtype: 'x_date_range', name: 'tool_receive_date'
      ,
        text: 'Invoice No.'
        cmp: name: 'invoice_no'
      ,
        text: 'Remark'
        cmp: name: 'remark'
      ]

    store = Ext.create 'Ext.data.Store',
      fields: ['a', 'b']


    @grid = Ext.create 'Ext.grid.Panel',
      region: 'center'
      flex: 1
      store: store 
      dockedItems: [
        xtype: 'pagingtoolbar'
        store: store
        dock: 'bottom'
        displayInfo: true
      ,
        xtype: 'toolbar'
        dock: 'top'
        items: [
          xtype: 'button'
          text: text_fa_icon 'file', 'Create'
          name: 'create'
        ,
          xtype: 'button'
          text: text_fa_icon 'edit', 'Edit'
          disabled: true
        ]
      ]
      columns: [
        xtype: 'rownumberer'
        width: 45
      ,
        text: 'Document No.'
        dataIndex: 'quotation_no'
      ,
        text: 'Description'
      ,
        text: 'Request By'
      ,
        text: 'Dapartment'
      ,
        text: 'Request Qty'
      ,
        text: 'Unit'
      ,
        text: 'CMD Issue Date'
      ,
        text: 'Require Date'
      ,
        text: 'Status'
      ,
        text: 'Tool Receive Date'
      ,
        text: 'Invoice No.'
      ,
        text: 'Receive Qty'
      ,
        text: 'Balance Qty'
      ,
        text: 'Remark'
      ,
        text: 'Document Approved'
      ]

    @items = [
      border: false
      layout: type: 'border'
      items: [
        @grid 
      ,
        @filter_panel
      ]
    ]

    @callParent arguments

Ext.define 'Program.cust_prop',
  extend: 'MainView'
  get_url: -> '<%= Pathname.new(__FILE__).to_s.split("javascripts")[1].to_s.split(".")[0] %>'
  get_title: -> 'Customer Properties'
  get_view: (init, fn)->
    me = @
    fn Ext.create 'CustPropView', rest_client: me.rest_client
